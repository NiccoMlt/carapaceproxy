# example configuration

listener.1.host=0.0.0.0
listener.1.port=8089
listener.1.ssl=false
listener.1.enabled=true

certificate.1.hostname=*
certificate.1.sslcertfile=conf/localhost.p12
certificate.1.sslcertfilepassword=testproxy

listener.2.host=0.0.0.0
listener.2.port=4089
listener.2.ssl=true
listener.2.ocps=true
listener.2.enabled=true
listener.2.defaultcertificate=*

filter.1.type=add-x-forwarded-for

filter.2.type=match-user-regexp
filter.2.param=trsid
filter.2.regexp=([\\w\\d]+)([*])

backend.1.id=localhost:8086
backend.1.host=localhost
backend.1.port=8086
backend.1.enabled=true

# default director
director.1.id=*
director.1.backends=*
director.1.enabled=true

# default actions:
# not-found: static 404 classpath:/default-error-pages/404_notfound.html
# internal-error: static 500 classpath:/default-error-pages/500_internalservererrord.html
# proxy-all: proxy, director '*'
# cache-if-possible: cache, director '*'

route.100.id=default
route.100.enabled=true
route.100.match=all
#route.1.action=proxy-all
route.100.action=cache-if-possible

default.action.notfound=not-found
default.action.internalerror=internal-error



# API
http.admin.enabled=true
http.admin.port=8001
http.admin.host=0.0.0.0


# Health Manager
# probe checker period, in seconds
healthmanager.period=30

# Max Connections for backend
connectionsmanager.maxconnectionsperendpoint=10
# Max Idle time
connectionsmanager.idletimeout=300000
# Max time to establish a connection to a backend
connectionsmanager.connecttimeout=10000
# Max Idle time for a request, after this timeout the request will be considered 'stuck' and the backend 'unreachable'
connectionsmanager.stuckrequesttimeout=300000

# Force director (valid only if the matched route mapps to a 'proxy' or 'cache' action)
mapper.forcedirector.parameter=x-director
# Force backend (valid only if the matched route mapps to a 'proxy' or 'cache' action)
mapper.forcebackend.parameter=x-backend